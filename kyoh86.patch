diff -Naur ./qmk_firmware/keyboards/keyball/keyball61/keymaps/kyoh86/config.h ./qmk_firmware/keyboards/keyball/keyball61/keymaps/kyoh86/config.h
--- ./qmk_firmware/keyboards/keyball/keyball61/keymaps/kyoh86/config.h	2023-10-19 21:16:12.102761981 +0900
+++ ./qmk_firmware/keyboards/keyball/keyball61/keymaps/kyoh86/config.h	2023-10-19 21:41:32.962822767 +0900
@@ -34,3 +34,4 @@
 #endif
 
 #define TAP_CODE_DELAY 5
+#define TAPPING_TERM 150
diff -Naur ./qmk_firmware/keyboards/keyball/keyball61/keymaps/kyoh86/keymap.c ./qmk_firmware/keyboards/keyball/keyball61/keymaps/kyoh86/keymap.c
--- ./qmk_firmware/keyboards/keyball/keyball61/keymaps/kyoh86/keymap.c	2023-10-19 21:16:12.102761981 +0900
+++ ./qmk_firmware/keyboards/keyball/keyball61/keymaps/kyoh86/keymap.c	2023-10-19 21:30:59.952796722 +0900
@@ -20,38 +20,51 @@
 
 #include "quantum.h"
 
+// see keycodes for https://github.com/qmk/qmk_firmware/blob/master/docs/keycodes.md
+// and https://github.com/Yowkees/keyball/blob/main/qmk_firmware/keyboards/keyball/lib/keyball/keycodes.md
+#define KBC_RST  0x7e00  // Keyball設定のリセット
+#define KBC_SAVE 0x7e01  // 現在のKeyball設定をEEPROMに保存します
+#define CPI_I100 0x7e02  // CPIを100増加させます(最大:12000)
+#define CPI_D100 0x7e03  // CPIを100減少させます(最小:100)
+#define CPI_I1K  0x7e04  // CPIを1000増加させます(最大:12000)
+#define CPI_D1K  0x7e05  // CPIを1000減少させます(最小:100)
+#define SCRL_TO  0x7e06  // タップごとにスクロールモードのON/OFFを切り替えます
+#define SCRL_MO  0x7e07  // キーを押している間、スクロールモードになります
+#define SCRL_DVI 0x7e08  // スクロール除数を１つ上げます(max D7 = 1/128)←最もスクロール遅い
+#define SCRL_DVD 0x7e09  // スクロール除数を１つ下げます(min D0 = 1/1)←最もスクロール速い
+
 // clang-format off
 const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
   [0] = LAYOUT_universal(
-    KC_ESC   , KC_1     , KC_2     , KC_3     , KC_4     , KC_5     ,                                  KC_6     , KC_7     , KC_8     , KC_9     , KC_0     , KC_MINS  ,
-    KC_DEL   , KC_Q     , KC_W     , KC_E     , KC_R     , KC_T     ,                                  KC_Y     , KC_U     , KC_I     , KC_O     , KC_P     , KC_INT3  ,
-    KC_TAB   , KC_A     , KC_S     , KC_D     , KC_F     , KC_G     ,                                  KC_H     , KC_J     , KC_K     , KC_L     , KC_SCLN  , S(KC_7)  ,
-    MO(1)    , KC_Z     , KC_X     , KC_C     , KC_V     , KC_B     , KC_RBRC  ,              KC_NUHS, KC_N     , KC_M     , KC_COMM  , KC_DOT   , KC_SLSH  , KC_RSFT  ,
-    _______  , KC_LCTL  , KC_LALT  , KC_LGUI,LT(1,KC_LNG2),LT(2,KC_SPC),LT(3,KC_LNG1),    KC_BSPC,LT(2,KC_ENT),LT(1,KC_LNG2),KC_RGUI, _______ , KC_RALT  , KC_PSCR
+    KC_EQUAL , KC_1    , KC_2    , KC_3    , KC_4         , KC_5         ,                                       KC_6         , KC_7  , KC_8    , KC_9   , KC_0    , KC_MINS          ,
+    KC_GRAVE , KC_Q    , KC_W    , KC_E    , KC_R         , KC_T         ,                                       KC_Y         , KC_U  , KC_I    , KC_O   , KC_P    , KC_BSLS          ,
+    KC_LALT  , KC_A    , KC_S    , KC_D    , KC_F         , KC_G         ,                                       KC_H         , KC_J  , KC_K    , KC_L   , KC_SCLN , LALT_T(KC_QUOTE) ,
+    KC_LSFT  , KC_Z    , KC_X    , KC_C    , KC_V         , KC_B         , LCTL_T(KC_ESC) ,     LCTL_T(KC_ESC) , KC_N         , KC_M  , KC_COMM , KC_DOT , KC_SLSH , KC_LSFT          ,
+    KC_LNG2  , KC_LGUI , KC_LBRC , KC_RBRC , LT(1,KC_ESC) , LT(2,KC_SPC) , LT(3,KC_TAB)   ,     KC_BSPC        , LT(2,KC_ENT) , KC_NO , KC_NO   , KC_NO  , KC_LGUI , KC_LNG1
   ),
 
   [1] = LAYOUT_universal(
-    S(KC_ESC), S(KC_1)  , KC_LBRC  , S(KC_3)  , S(KC_4)  , S(KC_5)  ,                                  KC_EQL   , S(KC_6)  ,S(KC_QUOT), S(KC_8)  , S(KC_9)  ,S(KC_INT1),
-    S(KC_DEL), S(KC_Q)  , S(KC_W)  , S(KC_E)  , S(KC_R)  , S(KC_T)  ,                                  S(KC_Y)  , S(KC_U)  , S(KC_I)  , S(KC_O)  , S(KC_P)  ,S(KC_INT3),
-    S(KC_TAB), S(KC_A)  , S(KC_S)  , S(KC_D)  , S(KC_F)  , S(KC_G)  ,                                  S(KC_H)  , S(KC_J)  , S(KC_K)  , S(KC_L)  , KC_QUOT  , S(KC_2)  ,
-    _______  , S(KC_Z)  , S(KC_X)  , S(KC_C)  , S(KC_V)  , S(KC_B)  ,S(KC_RBRC),           S(KC_NUHS), S(KC_N)  , S(KC_M)  ,S(KC_COMM), S(KC_DOT),S(KC_SLSH),S(KC_RSFT),
-    _______  ,S(KC_LCTL),S(KC_LALT),S(KC_LGUI), _______  , _______  , _______  ,            _______  , _______  , _______  ,S(KC_RGUI), _______  , S(KC_RALT), _______
+    KC_NO   , KC_1  , KC_2 , KC_3 , KC_4    , KC_5   ,                         KC_NO  , KC_NO        , KC_NO     , KC_NO      , KC_NO      , KC_NO ,
+    KC_NO   , KC_Q  , KC_W , KC_E , KC_NO   , KC_F3  ,                         KC_NO  , KC_LEFT      , KC_UP     , KC_RIGHT   , KC_NO      , KC_NO ,
+    KC_LCTL , KC_A  , KC_S , KC_D , KC_F    , KC_F5  ,                         KC_NO  , KC_MS_BTN1   , KC_DOWN   , KC_MS_BTN2 , KC_MS_BTN3 , KC_NO ,
+    KC_LSFT , KC_6  , KC_7 , KC_8 , KC_9    , KC_0   , KC_ESC  ,     KC_NO   , KC_F1  , LAG(KC_PSCR) , LAG(KC_G) , LAG(KC_R)  , LGUI(KC_G) , KC_NO ,
+    TO(0)   , KC_NO , KC_Z , KC_B , KC_LCTL , KC_SPC , KC_LSFT ,     KC_BSPC , KC_ENT , KC_NO        , KC_NO     , KC_NO      , KC_NO      , KC_NO
   ),
 
   [2] = LAYOUT_universal(
-    _______  , KC_F1    , KC_F2    , KC_F3    , KC_F4    , KC_F5    ,                                  KC_F6    , KC_F7    , KC_F8    , KC_F9    , KC_F10   , KC_F11   ,
-    _______  , _______  , KC_7     , KC_8     , KC_9     , _______  ,                                  _______  , KC_LEFT  , KC_UP    , KC_RGHT  , _______  , KC_F12   ,
-    _______  , _______  , KC_4     , KC_5     , KC_6     ,S(KC_SCLN),                                  KC_PGUP  , KC_BTN1  , KC_DOWN  , KC_BTN2  , KC_BTN3  , _______  ,
-    _______  , _______  , KC_1     , KC_2     , KC_3     ,S(KC_MINS), S(KC_8)  ,            S(KC_9)  , KC_PGDN  , _______  , _______  , _______  , _______  , _______  ,
-    _______  , _______  , KC_0     , KC_DOT   , _______  , _______  , _______  ,             KC_DEL  , _______  , _______  , _______  , _______  , _______  , _______
+    KC_NO   , KC_F1   , KC_F2 , KC_F3  , KC_F4 , KC_F5 ,                              KC_F6   , KC_F7   , KC_F8   , KC_F9   , KC_F10  , KC_F11  ,
+    KC_NO   , KC_NO   , KC_7  , KC_8   , KC_9  , KC_NO ,                              KC_NO   , KC_LEFT , KC_UP   , KC_RGHT , KC_NO   , KC_F12  ,
+    KC_LALT , KC_NO   , KC_4  , KC_5   , KC_6  , KC_NO ,                              KC_PGUP , KC_BTN1 , KC_DOWN , KC_BTN2 , KC_BTN3 , KC_LALT ,
+    KC_LSFT , KC_NO   , KC_1  , KC_2   , KC_3  , KC_NO , KC_NO ,             KC_NO  , KC_PGDN , KC_HOME , KC_NO   , KC_END  , KC_NO   , KC_LSFT ,
+    TO(0)   , KC_LGUI , KC_0  , KC_DOT , KC_NO , KC_NO , KC_NO ,             KC_DEL , KC_NO   , KC_NO   , KC_NO   , KC_NO   , KC_LGUI , KC_NO
   ),
 
   [3] = LAYOUT_universal(
-    RGB_TOG  , _______  , _______  , _______  , _______  , _______  ,                                  RGB_M_P  , RGB_M_B  , RGB_M_R  , RGB_M_SW , RGB_M_SN , RGB_M_K  ,
-    RGB_MOD  , RGB_HUI  , RGB_SAI  , RGB_VAI  , _______  , _______  ,                                  RGB_M_X  , RGB_M_G  , RGB_M_T  , RGB_M_TW , _______  , _______  ,
-    RGB_RMOD , RGB_HUD  , RGB_SAD  , RGB_VAD  , _______  , _______  ,                                  CPI_D1K  , CPI_D100 , CPI_I100 , CPI_I1K  , KBC_SAVE , KBC_RST  ,
-    _______  , _______  , SCRL_DVD , SCRL_DVI , SCRL_MO  , SCRL_TO  , EE_CLR  ,            EE_CLR  , KC_HOME  , KC_PGDN  , KC_PGUP  , KC_END   , _______  , _______  ,
-    QK_BOOT    , _______  , KC_LEFT  , KC_DOWN  , KC_UP    , KC_RGHT  , _______  ,            _______  , KC_BSPC  , _______  , _______  , _______  , _______  , QK_BOOT
+    TO(1)   , KC_NO   , KC_NO   , KC_NO    , KC_NO    , KC_NO   ,                                 KC_NO    , KC_NO    , KC_NO , KC_NO , KC_NO   , KC_NO   ,
+    KC_NO   , KC_NO   , KC_NO   , KC_NO    , KC_NO    , KC_NO   ,                                 KC_NO    , KC_NO    , KC_NO , KC_NO , KC_NO   , KC_NO   ,
+    KC_LALT , KC_NO   , KC_NO   , KC_NO    , KC_NO    , KC_NO   ,                                 KC_NO    , KC_NO    , KC_NO , KC_NO , KC_NO   , KC_LALT ,
+    KC_LSFT , KC_NO   , CPI_D1K , CPI_D100 , CPI_I100 , CPI_I1K , KBC_SAVE ,            KBC_RST , SCRL_DVI , SCRL_DVD , KC_NO , KC_NO , KC_NO   , KC_LSFT ,
+    TO(0)   , KC_LGUI , KC_NO   , KC_NO    , KC_NO    , KC_NO   , KC_NO    ,            KC_NO   , KC_NO    , KC_NO    , KC_NO , KC_NO , KC_LGUI , KC_NO
   ),
 };
 // clang-format on
